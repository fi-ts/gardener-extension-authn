//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
2025 Copyright FI-TS Finanz Informatik Technologie Service.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	authn "github.com/fi-ts/gardener-extension-authn/pkg/apis/authn"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AuthnConfig)(nil), (*authn.AuthnConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AuthnConfig_To_authn_AuthnConfig(a.(*AuthnConfig), b.(*authn.AuthnConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*authn.AuthnConfig)(nil), (*AuthnConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_authn_AuthnConfig_To_v1alpha1_AuthnConfig(a.(*authn.AuthnConfig), b.(*AuthnConfig), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_AuthnConfig_To_authn_AuthnConfig(in *AuthnConfig, out *authn.AuthnConfig, s conversion.Scope) error {
	out.Issuer = in.Issuer
	out.ClientID = in.ClientID
	return nil
}

// Convert_v1alpha1_AuthnConfig_To_authn_AuthnConfig is an autogenerated conversion function.
func Convert_v1alpha1_AuthnConfig_To_authn_AuthnConfig(in *AuthnConfig, out *authn.AuthnConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_AuthnConfig_To_authn_AuthnConfig(in, out, s)
}

func autoConvert_authn_AuthnConfig_To_v1alpha1_AuthnConfig(in *authn.AuthnConfig, out *AuthnConfig, s conversion.Scope) error {
	out.Issuer = in.Issuer
	out.ClientID = in.ClientID
	return nil
}

// Convert_authn_AuthnConfig_To_v1alpha1_AuthnConfig is an autogenerated conversion function.
func Convert_authn_AuthnConfig_To_v1alpha1_AuthnConfig(in *authn.AuthnConfig, out *AuthnConfig, s conversion.Scope) error {
	return autoConvert_authn_AuthnConfig_To_v1alpha1_AuthnConfig(in, out, s)
}
