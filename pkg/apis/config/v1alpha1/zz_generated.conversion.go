//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
2024 Copyright FI-TS Finanz Informatik Technologie Service.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	config "github.com/fi-ts/gardener-extension-authn/pkg/apis/config"
	apisconfig "github.com/gardener/gardener/extensions/pkg/apis/config"
	configv1alpha1 "github.com/gardener/gardener/extensions/pkg/apis/config/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Auth)(nil), (*config.Auth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Auth_To_config_Auth(a.(*Auth), b.(*config.Auth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.Auth)(nil), (*Auth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_Auth_To_v1alpha1_Auth(a.(*config.Auth), b.(*Auth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ControllerConfiguration)(nil), (*config.ControllerConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ControllerConfiguration_To_config_ControllerConfiguration(a.(*ControllerConfiguration), b.(*config.ControllerConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.ControllerConfiguration)(nil), (*ControllerConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_ControllerConfiguration_To_v1alpha1_ControllerConfiguration(a.(*config.ControllerConfiguration), b.(*ControllerConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ImagePullSecret)(nil), (*config.ImagePullSecret)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ImagePullSecret_To_config_ImagePullSecret(a.(*ImagePullSecret), b.(*config.ImagePullSecret), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.ImagePullSecret)(nil), (*ImagePullSecret)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_ImagePullSecret_To_v1alpha1_ImagePullSecret(a.(*config.ImagePullSecret), b.(*ImagePullSecret), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Auth_To_config_Auth(in *Auth, out *config.Auth, s conversion.Scope) error {
	out.ProviderTenant = in.ProviderTenant
	out.MetalURL = in.MetalURL
	out.MetalHMAC = in.MetalHMAC
	out.MetalAuthType = in.MetalAuthType
	return nil
}

// Convert_v1alpha1_Auth_To_config_Auth is an autogenerated conversion function.
func Convert_v1alpha1_Auth_To_config_Auth(in *Auth, out *config.Auth, s conversion.Scope) error {
	return autoConvert_v1alpha1_Auth_To_config_Auth(in, out, s)
}

func autoConvert_config_Auth_To_v1alpha1_Auth(in *config.Auth, out *Auth, s conversion.Scope) error {
	out.ProviderTenant = in.ProviderTenant
	out.MetalURL = in.MetalURL
	out.MetalHMAC = in.MetalHMAC
	out.MetalAuthType = in.MetalAuthType
	return nil
}

// Convert_config_Auth_To_v1alpha1_Auth is an autogenerated conversion function.
func Convert_config_Auth_To_v1alpha1_Auth(in *config.Auth, out *Auth, s conversion.Scope) error {
	return autoConvert_config_Auth_To_v1alpha1_Auth(in, out, s)
}

func autoConvert_v1alpha1_ControllerConfiguration_To_config_ControllerConfiguration(in *ControllerConfiguration, out *config.ControllerConfiguration, s conversion.Scope) error {
	if err := Convert_v1alpha1_Auth_To_config_Auth(&in.Auth, &out.Auth, s); err != nil {
		return err
	}
	out.HealthCheckConfig = (*apisconfig.HealthCheckConfig)(unsafe.Pointer(in.HealthCheckConfig))
	out.ImagePullSecret = (*config.ImagePullSecret)(unsafe.Pointer(in.ImagePullSecret))
	return nil
}

// Convert_v1alpha1_ControllerConfiguration_To_config_ControllerConfiguration is an autogenerated conversion function.
func Convert_v1alpha1_ControllerConfiguration_To_config_ControllerConfiguration(in *ControllerConfiguration, out *config.ControllerConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha1_ControllerConfiguration_To_config_ControllerConfiguration(in, out, s)
}

func autoConvert_config_ControllerConfiguration_To_v1alpha1_ControllerConfiguration(in *config.ControllerConfiguration, out *ControllerConfiguration, s conversion.Scope) error {
	if err := Convert_config_Auth_To_v1alpha1_Auth(&in.Auth, &out.Auth, s); err != nil {
		return err
	}
	out.HealthCheckConfig = (*configv1alpha1.HealthCheckConfig)(unsafe.Pointer(in.HealthCheckConfig))
	out.ImagePullSecret = (*ImagePullSecret)(unsafe.Pointer(in.ImagePullSecret))
	return nil
}

// Convert_config_ControllerConfiguration_To_v1alpha1_ControllerConfiguration is an autogenerated conversion function.
func Convert_config_ControllerConfiguration_To_v1alpha1_ControllerConfiguration(in *config.ControllerConfiguration, out *ControllerConfiguration, s conversion.Scope) error {
	return autoConvert_config_ControllerConfiguration_To_v1alpha1_ControllerConfiguration(in, out, s)
}

func autoConvert_v1alpha1_ImagePullSecret_To_config_ImagePullSecret(in *ImagePullSecret, out *config.ImagePullSecret, s conversion.Scope) error {
	out.DockerConfigJSON = in.DockerConfigJSON
	return nil
}

// Convert_v1alpha1_ImagePullSecret_To_config_ImagePullSecret is an autogenerated conversion function.
func Convert_v1alpha1_ImagePullSecret_To_config_ImagePullSecret(in *ImagePullSecret, out *config.ImagePullSecret, s conversion.Scope) error {
	return autoConvert_v1alpha1_ImagePullSecret_To_config_ImagePullSecret(in, out, s)
}

func autoConvert_config_ImagePullSecret_To_v1alpha1_ImagePullSecret(in *config.ImagePullSecret, out *ImagePullSecret, s conversion.Scope) error {
	out.DockerConfigJSON = in.DockerConfigJSON
	return nil
}

// Convert_config_ImagePullSecret_To_v1alpha1_ImagePullSecret is an autogenerated conversion function.
func Convert_config_ImagePullSecret_To_v1alpha1_ImagePullSecret(in *config.ImagePullSecret, out *ImagePullSecret, s conversion.Scope) error {
	return autoConvert_config_ImagePullSecret_To_v1alpha1_ImagePullSecret(in, out, s)
}
